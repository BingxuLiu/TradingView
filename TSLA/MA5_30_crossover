//@version=5
strategy("双均线交叉策略-增强版", overlay=true,initial_capital=1000000,default_qty_type=strategy.percent_of_equity, default_qty_value=90,commission_type=strategy.commission.percent,commission_value=0.1,slippage=4,margin_long=100,process_orders_on_close=true)
// 计算移动均线
ma5 = ta.sma(close, 5)
ma30 = ta.sma(close, 30)
ma225 = ta.sma(close, 225)

// 绘制移动均线
plot(ma5, color=color.red, title="Fast")
plot(ma30, color=color.blue, title="Slow")
plot(ma225, color=color.purple, title="MA225")

// 计算交叉信号
crossover_buy = ta.crossover(ma5, ma30*1.01)
crossunder_sell = ta.crossunder(ma5, ma30*0.99)
above_ma225 = close > ma225
under_ma225 = close < ma225

// 交易统计变量
var int tradeCount = 0  // 交易次数
var float entryPrice = na  // 入场价格
var int entryBar = na  // 入场K线索引
var float maxDrawdown = 0.0  // 最大回撤
var float peakEquity = strategy.initial_capital  // 权益峰值
var float firstClose = na
if na(firstClose)
    firstClose := close

// 更新最大回撤
currentEquity = strategy.equity
if currentEquity > peakEquity
    peakEquity := currentEquity
drawdown = (peakEquity - currentEquity) / peakEquity * 100
if drawdown > maxDrawdown
    maxDrawdown := drawdown

// 策略入场
if (crossover_buy and above_ma225)
    if strategy.position_size == 0  // 确保空仓时才入场
        strategy.entry("Buy", strategy.long)
        entryPrice := close
        entryBar := bar_index
        tradeCount += 1

// 策略出场
if (crossunder_sell or under_ma225) and strategy.position_size > 0
    strategy.close("Buy")
    
    // 计算本次交易信息
    exitPrice = close
    holdDays = bar_index - entryBar
    returnRate = (exitPrice - entryPrice) / entryPrice * 100
    
    // 在图表上显示交易信息
    labelText = "第" + str.tostring(tradeCount) + "次交易\n" +"收益率: " + str.tostring(returnRate, "#.##") + "%\n" +"持仓天数: " + str.tostring(holdDays) + "天"
    
    label.new(bar_index, high , labelText, color=returnRate > 0 ? color.green : color.red,textcolor=color.white,style=label.style_label_down,size=size.small)

// 标记买入信号
plotshape(series=crossover_buy and above_ma225 and strategy.position_size[1] == 0, title="买入信号", location=location.belowbar, color=color.rgb(248, 167, 4),style=shape.triangleup, size=size.small,text="买入")

// 标记卖出信号
plotshape(series=(crossunder_sell or under_ma225) and strategy.position_size[1] > 0, title="卖出信号", location=location.abovebar, color=color.rgb(161, 72, 225), style=shape.triangledown, size=size.small,text="卖出")

// 计算平均持仓时间
totalBars = strategy.closedtrades > 0 ? strategy.closedtrades.entry_bar_index(strategy.closedtrades-1) - strategy.closedtrades.entry_bar_index(0) : 0
avgHoldBars = strategy.closedtrades > 0 ? totalBars / strategy.closedtrades : 0

// 在图表右上角显示统计信息
var table statsTable = table.new(position.top_right, 1, 6, bgcolor=color.new(color.black, 80),border_color=color.gray,border_width=1)
buyHoldReturn = (close - firstClose) / firstClose

if barstate.islast
        // 计算 buy and hold 收益率（用回测区间第一个交易日和最后一个交易日的收盘价）
    table.cell(statsTable, 0, 0, "策略统计", text_color=color.white, text_size=size.normal)
    table.cell(statsTable, 0, 1, "总交易次数: " + str.tostring(tradeCount), text_color=color.white, text_size=size.small)
    table.cell(statsTable, 0, 2, "理论回撤: " + str.tostring(maxDrawdown, "#.##") + "%"+"｜｜最大回撤: " + str.tostring(maxDrawdown*1.3, "#.##") + "%",  text_color=color.red, text_size=size.small)
    table.cell(statsTable, 0, 3, "平均持仓: " + str.tostring(avgHoldBars, "#") + " 天", text_color=color.white, text_size=size.small)
    table.cell(statsTable, 0, 4, "策略收益率: " + str.tostring((currentEquity-strategy.initial_capital)/strategy.initial_capital, "#,###")+" 倍", text_color=color.green, text_size=size.small)
    table.cell(statsTable, 0, 5, "Buy&Hold收益率: " + str.tostring(buyHoldReturn, "#,###")+ " 倍", text_color=color.green, text_size=size.small)